var finalPagina = false;
var forceReload = false;

jQuery(document).ready(function () {
    loadBanners();

    if (window.location.href.toLowerCase().indexOf("professionalnetwork") == -1) {
        getMyTools(true);
    }

    getNotifications();

    autocompletefn("#menuBuscadorQuery");

    jQuery("#s4-workspace").scroll(function () {
        infiniteScroll();
    });

    jQuery('#btnRemoveTools').on('click', function (e) {
        RemoveFavTool();
    });

    jQuery('#btnCloseModal').on('click', function (e) {
        CloseModalDialogEditTools();
    });

    var pagerIndex = "#pager" + jQuery("#hdnCurrentPage").val();
    jQuery(pagerIndex).addClass("pager__item--current");
});

function getMyTools(first) {
    var serviceUrl = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/icore4sp/handlers/indraweb2018/Tools2018.ashx";
    jQuery.ajax({
        url: serviceUrl,
        dataType: "json",
        cache: false
    }).done(function (data) {
        DrawMyTools(data);
        if (first && jQuery('#hdnShowModalTools').length > 0 && jQuery('#hdnShowModalTools').val() == "1") {
            DrawMyToolsModal(data);
        }
    });
}

function getMyToolsAndModal() {
    var serviceUrl = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/icore4sp/handlers/indraweb2018/Tools2018.ashx";
    jQuery.ajax({
        url: serviceUrl,
        dataType: "json",
        cache: false
    }).done(function (data) {
        DrawMyTools(data);
        DrawMyToolsModal(data);
    });
}

function GetMyToolModal() {
    var serviceUrl = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/icore4sp/handlers/indraweb2018/Tools2018.ashx";
    jQuery.ajax({
        url: serviceUrl,
        dataType: "json",
        cache: false
    }).done(function (data) {
        DrawMyToolsModal(data);
    });
}

function DrawMyTools(data) {
    if (jQuery('#contenidoToolsCarousel').length > 0) {
        if (data.Tools != null) {
            var numberSlides = $('#contenidoToolsCarousel').slick('getSlick').slideCount;
            // Si había slides, eliminarlas
            if (numberSlides > 0) {
                var slider = jQuery("#contenidoToolsCarousel");
                for (var i = numberSlides; i >= 0; i--) {
                    slider.slick("slickRemove", i);
                }
            }
            jQuery.each(data.Tools, function (key, value) {
                var strurlTemp = "";
                if (value.ToolIcon.length > 0) {
                    strurlTemp = value.ToolIcon;
                    strurlTemp = strurlTemp.split("href=")[1];
                    strurlTemp = strurlTemp.split(">")[0];
                    strurlTemp = ReplaceAllText(strurlTemp, "\"", "");
                }

                if (value.ApplicationUrl.length > 0) {
                    url = value.ApplicationUrl;
                    if (!url.startsWith("http")) {
                        prefix = data.ServerName;
                    }
                }

                var description = value.Title;
                if (description.length > 35) {
                    description = description.substring(0, 35) + "...";
                }

                var contenido = "<div class=\"tools__tool-wrapper\">" +
					"<a href='" + value.ApplicationUrl + "' target=\"_blank\" class=\"tools__tool\">" +
					"<div class=\"tools__tool__icon-wrapper\">" +
					"      <img class='pngicon' src='" + strurlTemp + "' alt=\"\" />" +
					"  </div>" +
					"  <div class=\"tools__tool__text-wrapper\">" +
					"      <p class=\"tools__tool__text\">" + description +
					"</p></div></a></div>";

                jQuery(".loadingFavToolSlider").remove();
                jQuery("#contenidoToolsCarousel").append(contenido);
            });
        }
        else {
            //No hay contenido.
            jQuery(".loadingFavToolSlider").remove();
            jQuery(".tools").remove();
        }

        jQuery("#lnkMisHerramientas").attr("href", data.AlCatalogoHerramientas);

        //activamos el carrusel una vez cargadas las herramientas
        indraweb.general.toolsCarousel();
    }
}

function ResetMyToolsModal() {
    jQuery(".row.jsSortable").empty();
    jQuery(".row.jsSortable").sortable("refresh");
}

function ResetMyToolsAndModal() {
    ResetMyToolsModal();
}

function ReloadMyToolsAndModal() {
    ResetMyToolsAndModal();
    getMyToolsAndModal();
}

// Modal herramientas favoritas
function DrawMyToolsModal(data) {
    if (data.Tools != null) {
        jQuery.each(data.Tools, function (key, value) {
            var strurlTemp = "";
            //si es applicationtype 3 no debe permitir borrar de favorito
            if (value.ToolIcon.length > 0) {
                strurlTemp = value.ToolIcon;
                strurlTemp = strurlTemp.split("href=")[1];
                strurlTemp = strurlTemp.split(">")[0];
                strurlTemp = ReplaceAllText(strurlTemp, "\"", "");
            }

            if (value.ApplicationUrl.length > 0) {
                url = value.ApplicationUrl;
                if (!url.startsWith("http")) {
                    prefix = data.ServerName;
                }
            }

            var description = value.Title;
            if (description.length > 35){
                description = description.substring(0, 35) + "...";
            }

            var checkDelete = "<label class='custom-control-inline custom-checkbox' style='visibility:hidden' for='toolsModalCheck" + value.IdTool + "'>" +
				"<span class='custom-control-indicator'></span>" +
				"</label>";
            if (value.ApplicationType != '3') {
                checkDelete = "<label class='custom-control-inline custom-checkbox' for='toolsModalCheck" + value.IdTool + "'>" +
					"<input type='checkbox' class='custom-control-input' id='toolsModalCheck" + value.IdTool + "' value='" + value.IdTool + "'>" +
					"<span class='custom-control-indicator'></span>" +
					"</label>";
            }
            var row =
				"<div id='" + value.IdTool + "' class='col-12 col-md-6 col-xl-4'>" +
				"<div class='tools-modal__tool'>" +
				checkDelete +
				"<div class='tools-modal__tool__table'>" +
				"<div class='tools-modal__tool__icon'>" +
				"<img class='pngicon' src='" + strurlTemp + "' alt=''>" +
				"</div>" +
				"<div class='tools-modal__tool__text'>" +
				"<p>" + description + "</p>" +
				"</div>" +
				"</div>" +
				"</div>" +
				"</div>";

            jQuery(".row.jsSortable").append(row);
        });

        jQuery(".row.jsSortable").sortable({
            stop: function () {
                SetToolOrder();
            }
        });
    }
    else {
        //No hay contenido.
        jQuery(".row.jsSortable").remove();
    }
}

function SetToolOrder(data) {
    var order = jQuery(".row.jsSortable").sortable("toArray");
    var urlAjax = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/iCore4SP/services/tools.svc/setordertool";

    jQuery.ajax({
        url: urlAjax,
        dataType: "json",
        data: JSON.stringify(order),
        cache: false
    }).done(function (data) {
        // No es necesario repintar en la ventana modal, sólo en la ventana padre
        forceReload = true;
    }).fail(function (error) {
        alert(error.responseText);
    });
}

function RemoveFavTool() {
    var selectedFavoTools = [];
    $("input:checkbox[id^=toolsModalCheck]:checked").each(function () {
        selectedFavoTools.push($(this).val());
    });

    if (selectedFavoTools.length == 0) {
        alert(jQuery("[name$='hiddenDeleteQuestionsFavNoneSelected']").val());
    }
    else {
        var deleteQuestionFav = jQuery("[name$='hiddenDeleteQuestionSlider']").val();
        var nombreLenguaje = jQuery("[name$='hiddenLanguageSlider']").val();

        if (confirm(deleteQuestionFav)) {
            var canaryValue = document.getElementById('__REQUESTDIGEST').value;
            var urlAjax = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/iCore4SP/handlers/tool.ashx";
            jQuery.ajax({
                url: urlAjax,
                dataType: "json",
                cache: false,
                type: "post",
                async: false,
                data: {
                    oper: "4",
                    l: nombreLenguaje,
                    idsherramientas: JSON.stringify(selectedFavoTools)
                },
                beforeSend: function (request) {
                    request.setRequestHeader("X-RequestDigest", canaryValue);
                },
            }).done(function (data) {
                forceReload = true;
                ResetMyToolsModal();
                GetMyToolModal();
            }).fail(function (error) {
                alert(error.responseText);
            });
        }
    }
}

function CloseModalDialogEditTools() {
    if (forceReload) {
        forceReload = false;
        getMyTools();
        ReloadToolsDatatable(true);
    }
}

//funciones buscador
function getSearchUrl() {
    var query = jQuery("#menuBuscadorQuery").val();
    var baseUrl = _spPageContextInfo.siteAbsoluteUrl;
    var language = _spPageContextInfo.webLanguage;

    var array = baseUrl.split('/');

    for (var i = 0; i < array.length; i++) {
        array[i] = array[i].toLowerCase();
    }

    if (jQuery.inArray("professionalnetwork", array) !== -1) {
        baseUrl = "https://www.indraweb.net"
    }

    if (jQuery.inArray("ProfessionalNetwork", array) !== -1) {
        baseUrl = "https://www.indraweb.net"
    }

    if (_spPageContextInfo.webServerRelativeUrl.indexOf("languages") == -1) {
        language = parseInt(jQuery("#UserCultureHidden1").val());
    }

    var rutaVariante = "";
    var rutaVarianteSinPag = "";
    if (language == 1033) {
        rutaVariante += "/languages/en-us/pages";
        rutaVarianteSinPag += "/languages/en-us";
    }

    if (language == 3082) {
        rutaVariante += "/languages/es-es/paginas";
        rutaVarianteSinPag += "/languages/es-es";
    }

    if (language == 1046) {
        rutaVariante += "/languages/pt-br/paginas";
        rutaVarianteSinPag += "/languages/pt-br";
    }
    baseUrl += rutaVariante + "/busqueda.aspx?k=" + query;

    return baseUrl;
}

function getSearchUrlResp() {
    var query = jQuery("#responsiveSearchBox").val();
    var baseUrl = _spPageContextInfo.siteAbsoluteUrl;
    var language = _spPageContextInfo.webLanguage;

    var array = baseUrl.split('/');

    for (var i = 0; i < array.length; i++) {
        array[i] = array[i].toLowerCase();
    }

    if (jQuery.inArray("professionalnetwork", array) !== -1) {
        baseUrl = "https://www.indraweb.net"
    }

    if (jQuery.inArray("ProfessionalNetwork", array) !== -1) {
        baseUrl = "https://www.indraweb.net"
    }

    if (_spPageContextInfo.webServerRelativeUrl.indexOf("languages") == -1) {
        language = parseInt(jQuery("#UserCultureHidden1").val());
    }

    var rutaVariante = "";
    var rutaVarianteSinPag = "";
    if (language == 1033) {
        rutaVariante += "/languages/en-us/pages";
        rutaVarianteSinPag += "/languages/en-us";
    }

    if (language == 3082) {
        rutaVariante += "/languages/es-es/paginas";
        rutaVarianteSinPag += "/languages/es-es";
    }

    if (language == 1046) {
        rutaVariante += "/languages/pt-br/paginas";
        rutaVarianteSinPag += "/languages/pt-br";
    }

    baseUrl += rutaVariante + "/busqueda.aspx?k=" + query;

    return baseUrl;
}

function launchSearch(e) {
    var url = window.location.href;
    if (e.keyCode == 13) {
        url = getSearchUrl();
        window.location.href = url;
        return false;
    }
}

function launchSearchResp(e) {
    var url = window.location.href;
    if (e.keyCode == 13) {
        url = getSearchUrlResp();
        window.location.href = url;
        return false;
    }
}

function SearchClick() {
    if (jQuery("#menuBuscadorQuery").val().trim() != "") {
        var url = getSearchUrl();
        window.location.href = url;
    }
    else {
        jQuery("#menuBuscadorQuery").focus();
    }

    return false;
}

function SearchClickResp(elem) {
    if (jQuery(elem).val().trim() != "") {
        var valueBox = jQuery(elem).val();
        var url = getSearchUrlResp(valueBox);
        window.location.href = url;
    }
    else {
        jQuery(elem).focus();
    }

    return false;
}

function getFields(results) {
    r = {};

    if (results != undefined) {
        if (results.Query != undefined) {
            r["Query"] = results.Query;
        }
        else {
            r["Query"] = results;
        }
    }
    return r;
}

function autocompletefn(controlId) {
    var SiteUrl = _spPageContextInfo.webServerRelativeUrl;
    var values = function (request, response) {
        jQuery.ajax({
            beforeSend: function (request) {
                request.setRequestHeader("Accept", "application/json;odata=verbose;charset=utf-8");
            },
            url: SiteUrl + "/_api/search/suggest?querytext='" + request.term + "'&fprequerysuggestions=true&showpeoplenamesuggestions=false",
            dataType: "json",
            success: function (data) {
                response(jQuery.map(data.d.suggest.Queries.results, function (item) {
                    return {
                        fields: getFields(item)
                    }
                }));
            },
            error: function (data) {}
        });
    }
    var autocomplete = jQuery(controlId).autocomplete({
        minLength: 3,
        source: values,

        // Run this when the item is selected
        select: function (event, ui) {
            var selectedQuery = ui.item.fields.Query.replace(/<B>/g, "").replace(/<\/B>/g, "");
            jQuery(controlId).val(selectedQuery);
            return SearchClick();
        },
        appendTo: jQuery('#menuBuscadorSelectWrap')
    }).data("ui-autocomplete")._renderItem = function (ul, item) {
        return jQuery("<li>").append('<a>' + item.fields.Query + '</a>')
			.appendTo(ul);
    };

    jQuery(controlId).autocomplete().data("ui-autocomplete")._resizeMenu = function () {
        var ul = this.menu.element;
        ul.outerWidth(this.element.outerWidth());
        ul.css("z-index", 10000);
    }
}
//fin funciones buscador

function ChangeUserLanguage(variationURL) {
    var urlAjax = "/_layouts/15/iCore4SP/handlers/changeLanguageUser.ashx";
    var canaryValue = document.getElementById('__REQUESTDIGEST').value;

    jQuery.ajax({
        type: "POST",
        async: false,
        url: urlAjax,
        data: {
            variationURL: encodeURI(variationURL)
        },
        beforeSend: function (request) {
            request.setRequestHeader("X-RequestDigest", canaryValue);
        },
        success: function (data) {
            if ($("input[id*='csr_sbox']").val() != null && $("input[id*='csr_sbox']").val() != '') {
                window.location.href = variationURL + "?k=" + $("input[id*='csr_sbox']").val();
            }
            else {
                window.location.href = variationURL;
            }

        }
    });
}

//funciones Notificaciones
function getNotifications() {
    var hasNotifications = true;
    var serviceUrl = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/icore4sp/handlers/indraweb2018/notifications2018.ashx?oper=1";
    var contenedor = jQuery("#contenedorCarruselNotif");
    contenedor.empty();
    jQuery(".noNotificationsText").remove();
    //Si el carrusel está inicializado lo vaciamos
    if (jQuery(".notifications__carousel").hasClass("slick-initialized")) {
        indraweb.general.notificationsRemoveCarousel();
        jQuery(".notifications__carousel").empty();
    }
    jQuery.ajax({
        url: serviceUrl,
        dataType: "json",
        cache: false
    }).done(function (data) {

        if (data.entity != null) {
            for (entity in data.entity) {
                var notificationUrl = "#";
                var stylebar = "";
                var notifTarget = "_blank";
                if (data.entity[entity].Source == "RedProf") {
                    var charParam = "?";
                    if (data.entity[entity].Url.indexOf("?") > -1) {
                        charParam = "&";
                    }

                    notificationUrl = data.entity[entity].Url + charParam + "notificacion=" + data.entity[entity].ID;

                    stylebar = "notifications__notification";
                    notifTarget = "_parent";
                }
                else {
                    notificationUrl = data.entity[entity].URLGES;
                    stylebar = "notifications__notification";
                }

                var fechaNotificacion = data.entity[entity].FechaFormat;
                if (fechaNotificacion == undefined) fechaNotificacion = '';

                var subTitle = data.entity[entity].SubTitle;

                var htmlNotification =
					"<div class='notifications__notification-wrapper'>" +
					"<div class='notifications__notification " + stylebar + "'>" +
					"<p class='notifications__notification__text'>" +
					"<a href='" + notificationUrl + "' target='" + notifTarget + "'>" + data.entity[entity].Title + "</a>" +
					"</p>" +
					"<hr class='hr'>" +
					"<p class='notifications__notification__section'>" + subTitle + "</p>" +
					"<p class='notifications__notification__date'>" + fechaNotificacion + "</p>" +
					"</div>" +
					"</div>";

                contenedor.append(htmlNotification);
            }
            if (data.entity.length > 0) {

                if (jQuery("#notifnumber").length < 1) {
                    jQuery(".icon-notifications").parent().append('<span class="header__notifications__number" id="notifnumber">' + data.entity.length + '<span class="sr-only"> notificaciones</span></span>');
                }
                indraweb.general.notificationsCarousel();
                updateNotif(data.entity.length);
            }
            else {
                hasNotifications = false;
            }
        }
        else {
            hasNotifications = false;
        }

        if (!hasNotifications) {
            //No hay notificaciones.

            //Recuperamos literal oculto.
            var noNotifications = jQuery("#NoNotifications").val();

            if (jQuery(".notifications__carousel").hasClass("slick-initialized")) {
                jQuery(".notifications__carousel").slick("unslick");
            }

            jQuery(".notifications__carousel").empty();
            jQuery(".notifications__carousel").prev().parent().append("<p class='noNotificationsText'>" + noNotifications + "</p>");

            jQuery("#btnicoNotificaciones").off();
            jQuery("#btnicoNotificaciones").on("click", function () {
                jQuery(".notifications").slideDown();
            });


            jQuery(".notifications__btn-close").off();
            jQuery(".notifications__btn-close").on("click", function () {

                jQuery(".notifications").slideUp();
            });
            jQuery(".header__notifications__number").hide();
        }

        //Reemplazamos URL tareas RRHH
        if (jQuery(".notifications__notification__section:contains('Tareas de RRHH')").parent().find("a").attr("href") == "") {
            jQuery(".notifications__notification__section:contains('Tareas de RRHH')").parent().find("a").attr("href", "https://apps.indraweb.net/componentes/hrtasks.jsp");
        }
        if (jQuery(".notifications__notification__section:contains('HR task')").parent().find("a").attr("href") == "") {
            jQuery(".notifications__notification__section:contains('HR task')").parent().find("a").attr("href", "https://apps.indraweb.net/componentes/hrtasks.jsp");
        }

        if (jQuery(".notifications__notification__section:contains('Tarefas de RH')").parent().find("a").attr("href") == "") {
            jQuery(".notifications__notification__section:contains('Tarefas de RH')").parent().find("a").attr("href", "https://apps.indraweb.net/componentes/hrtasks.jsp");
        }
    });
}
//fin funciones Notificaciones

function updateNotif(number) {
    jQuery("#notifnumber").html(number + ' <span class="sr-only"> notificaciones</span>');
}

//inicio funciones virtual campus
function getEventsIOU() {

    var timeExpIOU = jQuery("#hdnTimeExpIOUEvents").val();

    var timeoutIOU = jQuery("#hdnTimeoutIOUEvents").val();

    var errorIOUEvents = jQuery("#hdnErrorIOUEvents").val();

    var noEventsIOUEvents = jQuery("#hdnNoEventsIOUEvents").val();

    if (timeExpIOU == undefined) {
        timeExpIOU = 0
    };

    var urlAjax = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/iCore4SP/handlers/indraweb2018/VirtualCampusEvents.ashx?TimeExp=" + timeExpIOU;

    var language = _spPageContextInfo.webLanguage;

    var contenedor = jQuery("#contenedorEventosIOU");

    if (contenedor.length > 0) {
        jQuery.ajax({
            url: urlAjax,
            dataType: "json",
            cache: true,
            type: "GET",
            timeout: timeoutIOU
        }).done(function (data) {
            var strContenido = "";
            var prevEventDate = "";
            for (entity in data.entity) {

                var EventTitle = data.entity[entity].Title;
                var DateEvent = data.entity[entity].DateEs;

                if (language == 1033) {
                    DateEvent = data.entity[entity].DateEn;
                }

                if (language == 3082) {
                    DateEvent = data.entity[entity].DateEs;
                }

                if (language == 1046) {
                    DateEvent = data.entity[entity].DatePt;
                }

                var TimeEvent = data.entity[entity].Time;
                var cssType = data.entity[entity].cssType;
                var cssSelected = data.entity[entity].cssSelected;
                var strTitleDate = "";
                if (DateEvent != prevEventDate) {
                    strTitleDate = "<h4 class=\"home-webinars__date\" id=\"webinarsDate\">" + DateEvent + "</h4>";
                }

                strContenido += strTitleDate +
					"<div class=\"home-webinars__webinars\">" +
					"<p class=\"home-webinars__time\">" +
					"<span class=\"" + cssSelected + " home-webinars__icons\" aria-hidden=\"true\"></span>" +
					"<span class=\"" + cssType + " home-webinars__icons\" aria-hidden=\"true\"></span>" +
					TimeEvent +
					"</p>" +
					"<p class=\"home-webinars__title\">" + EventTitle + "</p>" +
					"</div>";

                prevEventDate = DateEvent;
            }
            if (strContenido.length > 0) {
                contenedor.replaceWith(strContenido);
            }
            else {
                contenedor.replaceWith("<p class=\"home-webinars__title\">" + noEventsIOUEvents + "</p>");
            }

            contenedor.replaceWith(strContenido);

        }).fail(function (jqXHR, textStatus) {
            console.log(textStatus);
            contenedor.replaceWith("<p class=\"home-webinars__title\">" + errorIOUEvents + "</p>");
        });
    }
}

function getEnrollments() {

    var timeExpIOU = jQuery("#hdnTimeExpTrainingPlanIOU").val();

    var durationIOU = jQuery("#hdnDurationTrainingPlanIOU").val();

    var hoursIOU = jQuery("#hdnHoursTrainingPlanIOU").val();

    var limitIOU = jQuery("#hdnLimitTrainingPlanIOU").val();

    var limitCharactersIOU = jQuery("#hdnLimitCharactersTrainingPlanIOU").val();

    var titlePlanTrainingPlanIOU = jQuery("#hdntitlePlanTrainingPlanIOU").val();

    var fixedLinks = jQuery("#hdnFixedLinksTrainingPlanIOU").val();

    var timeoutIOU = jQuery("#hdnTimeoutTrainingPlanIOU").val();

    var urlTabListSessions = jQuery("#hdnUrlTabListSessions").val();

    var urlTitleTabListSessions = jQuery("#hdnTitleUrlTabListSessions").val();

    if (timeExpIOU == undefined) {
        timeExpIOU = 0
    };

    var language = _spPageContextInfo.webLanguage;

    var contenedor = jQuery("#contenedorTrainingPlanIOU");

    if (fixedLinks == "false") {
        if (contenedor.length > 0) {
            var urlAjax = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/iCore4SP/handlers/indraweb2018/VirtualCampusEnrollments.ashx?TimeExp=" + timeExpIOU;
            jQuery.ajax({
                url: urlAjax,
                dataType: "json",
                cache: true,
                type: "GET",
                timeout: timeoutIOU
            }).done(function (data) {
                var contenidohtml =
					"<section class='home-training'>" +
					"<div class='row'>" +
					"<div class='col-xl-6'>" +
					"<h3 class='section-title3'>" + titlePlanTrainingPlanIOU + "</h3>" +
					"</div>" +
					"<div class='col-xl-6'>" +
					"<a href='" + urlTabListSessions + "' class='home-training__active-enrollments' target='_blank'>" + urlTitleTabListSessions + "</a>" +
					"</div>" +
					"</div>";

                for (entity in data.entity) {
                    var title = data.entity[entity].Title;
                    var description = data.entity[entity].Description;
                    var duration = data.entity[entity].Duration;
                    var limit = data.entity[entity].LimitEs;

                    if (language == 1033) {
                        limit = data.entity[entity].LimitEn;
                    }

                    if (language == 3082) {
                        limit = data.entity[entity].LimitEs;
                    }

                    if (language == 1046) {
                        limit = data.entity[entity].LimitPt;
                    }

                    if (description.length > limitCharactersIOU) {
                        description = description.substring(0, limitCharactersIOU) + "...";
                    }

                    contenidohtml += "<div class='media'>" +
						"                    <div class='media-body'>" +
						"                        <h4 class='home-training__title'><a href='" + urlTabListSessions + "' target='_blank'>" + title + "</a></h4>" +
						"                        <hr class='hr'>" +
						"                        <p class='home-training__description'>" + description + "</p>" +
						"                        <p class='home-training__duration'>" + durationIOU + ": " + duration + " " + hoursIOU + "</p>" +
						"                        <span class='home-training__deadline'>" + limitIOU + ": " + limit + "</span>" +
						"                    </div>" +
						"</div> ";

                }
                contenidohtml += "</section>";

                if (data.entity.length > 0) {
                    jQuery(".home-training").replaceWith(contenidohtml);
                }
                else {
                    jQuery("#loadingTrainingPlanIOU").hide();
                    jQuery("#contenedorTrainingPlanIOU").show();
                }

            }).fail(function (jqXHR, textStatus) {
                console.log((textStatus));
                jQuery("#loadingTrainingPlanIOU").hide();
                jQuery("#contenedorTrainingPlanIOU").show();
            });
        }
    }
    else {
        jQuery("#loadingTrainingPlanIOU").hide();
        jQuery("#contenedorTrainingPlanIOU").show();
    }
}

function infiniteScroll() {
    if (jQuery(".home-campus").length > 0) {
        var topIOU = jQuery(".home-campus").offset().top;

        var closeToBottom = jQuery("#s4-workspace").scrollTop() > topIOU
            if (closeToBottom && finalPagina == false) {
                finalPagina = true;
                //Agregar la carga del pie
                getEventsIOU();
                getEnrollments();
            }
        }
    }
//fin funciones virtual campus

function GoToCommunity() {
    var selectedCommunity = jQuery('#selectNavIndraCommunity option:selected');
    var index = jQuery('#selectNavIndraCommunity option').index(selectedCommunity);
    if (index > 0) {
        window.location.href = selectedCommunity.val();
    }
}

function loadBanners() {
    var bannersMenu = jQuery("div[data-bannersrc]");
    jQuery.each(bannersMenu, function (index, elem) {
        var urlBanner = jQuery(this).attr("data-bannersrc");

        var urlAjax = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/icore4sp/handlers/indraweb2018/BannersMenu2018.ashx?UrlContent=" + urlBanner;
        jQuery(this).load(urlAjax, function () {
            jQuery(this).removeAttr("data-bannersrc");
        });
    });
}

///////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////Catalog Tools Responsive//////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////
function InitializeCatalogTools() {
    InitializeCatalogToolsWaitDatatable();
}

function SetCustomDatatable(paginatePreviousText, paginateNextText, searchText, datatablePrefix) {
    jQuery('#table' + datatablePrefix + '_paginate').find('.paginate_button').each(function (key, value) {
        var disabledItem = '';
        var tabItem;
        var currentItem = '';
        if (value.className.indexOf('disabled') !== -1) {
            disabledItem = '--disabled';
            tabItem = ' tabindex = "-1" ';
        }

        if (value.className.indexOf('current') !== -1) {
            currentItem = '--current';
            tabItem = ' tabindex = "-1" ';
        }

        if (value.id == 'table' + datatablePrefix + '_previous') {
            value.innerHTML =
				'<li class="pager__item pager__item' + disabledItem + '">\n' +
				'	<a href="#" class="pager__link">\n' +
				'		<span class="icon-arrow-left pager__link__icon" aria-hidden="true"></span>\n' +
				'		<span class="pager__link__text">' + paginatePreviousText + '</span>\n' +
				'	</a>\n' +
				'</li>';
        }
        else {
            if (value.id == 'table' + datatablePrefix + '_next') {
                value.innerHTML = '<li class="pager__item pager__item' + disabledItem + '">\n' +
					'	<a href="#" class="pager__link" ' + tabItem + '>\n' +
					'		<span class="pager__link__text">' + paginateNextText + '</span>\n' +
					'		<span class="icon-arrow-right pager__link__icon" aria-hidden="true"></span>\n' +
					'	</a>\n' +
					'</li>';
            }
            else {
                value.innerHTML = '<li class="pager__item pager__item' + currentItem + '">\n' +
					'<a href="#" class="pager__link ' + tabItem + '>\n' +
					'	<span class="pager__link__text">' + value.innerText + '</span>\n' +
					'</a>\n' +
					'</li>';
            }
        }
    });

    var textSearch = '<label for="listFilterInputSearch" id="listFilterInputSearch' + datatablePrefix + '">' + searchText + '</label>\n' +
		' <div class="input-group input-group-' + datatablePrefix + '" >\n' +
		//' <input type="text" id="listFilterInputSearch" class="form-control">\n' +
		'     <span class="input-group-addon" id="btnGroupAddon">\n' +
		'     <button type="button" class="label-input-group__button">\n' +
		'         <span class="icon-search" aria-hidden="true"></span>\n' +
		'         <span class="sr-only">' + searchText + '</span>\n' +
		'     </button>\n' +
		'     </span>\n' +
		' </div>';
    if (jQuery('#listFilterInputSearch' + datatablePrefix).length == 0) {
        $(textSearch).appendTo(".label-input-group-" + datatablePrefix);
        $('#table' + datatablePrefix + '_filter').find('input').addClass('form-control').appendTo('.input-group-' + datatablePrefix);
        $('#table' + datatablePrefix + '_filter').empty();
    }
}

function InitializeCatalogToolsWaitDatatable() {
    var columns = [{
        "title": "Title"
    }, {
        "title": "Description"
    }, {
        "title": "Category"
    }, {
        "title": "IsFavourite"
    }, {
        "title": "LinkIcon"
    }, {
        "title": "LinkTool"
    }];
    var showEntriesText = "Mostrar _MENU_ herramientas";
    var searchText = "Buscar";
    var infoText = "Mostrando de la _START_ a la _END_ de un total de _TOTAL_ herramientas"
    var infoFilteredText = "";
    var infoEmptyText = "No existen herramientas disponibles";
    var zeroRecordsText = "Ninguna coincidencia encontrada";
    var paginateFirstText = "Primera página";
    var paginatePreviousText = "Anterior";
    var paginateNextText = "Siguiente";
    var paginateLastText = "Última página";
    var moreInfo = "+ info";
    var addFavourite = "Añadir como favorito";
    var deleteFavourite = "Quitar como favorito";

    var translations = GetTranslationsDatatable();

    if (typeof translations !== 'undefined' && typeof translations !== 'null' && translations != '') {
        var translationsParsed = JSON.parse(translations);
        if (typeof translationsParsed !== 'undefined' && typeof translationsParsed !== 'null' && translationsParsed != '') {
            showEntriesText = translationsParsed.ShowEntries;
            searchText = translationsParsed.Search;
            infoText = translationsParsed.Info;
            infoFilteredText = translationsParsed.InfoFiltered;
            infoEmptyText = translationsParsed.InfoEmpty;
            zeroRecordsText = translationsParsed.ZeroRecords;
            paginateFirstText = translationsParsed.PaginateFirst;
            paginatePreviousText = translationsParsed.PaginatePrevious;
            paginateNextText = translationsParsed.PaginateNext;
            paginateLastText = translationsParsed.PaginateLast;
            moreInfo = translationsParsed.MoreInfo;
            addFavourite = translationsParsed.AddFavourite;
            deleteFavourite = translationsParsed.DeleteFavourite;
        }
    }

    var datatableToolsElements = GetdatatableToolsElements();

    if (typeof datatableToolsElements !== 'undefined' && typeof datatableToolsElements !== 'null' && datatableToolsElements != '[]') {
        var datatableToolsElementsParsed = JSON.parse(datatableToolsElements);
        var firstprint = true;
        if (typeof datatableToolsElementsParsed !== 'undefined' && typeof datatableToolsElementsParsed !== 'null' && datatableToolsElementsParsed != '') {
            var maxcharacters = Number(jQuery("[name*='hiddenMaxCharactersTools']").val());

            jQuery('#tabletools').dataTable({
                "dom": '<"list-filter"\n' +
					'     <"list-filter__form-search"\n' +
					'         <"row"\n' +
					'             <"d-none d-md-block col-md-5 col-xl-4"l>\n' +
					'             <"col-md-5 col-xl-4 ml-auto"\n' +
					'                 <"label-input-group label-input-group-tools"f>\n' +
					'             >\n' +
					'         >\n' +
					'     >\n' +
					' >\n' +
					' <"tools-list"t>\n' +
					' <"pager"\n' +
					'     <"row"\n' +
					'         <"col-md-6"\n' +
					'             <"pager__text"i>\n' +
					'         >\n' +
					'         <"col-md-6"\n' +
					'             <"pager__pager"p>\n' +
					'         >\n' +
					'     >\n' +
					' >',
                "data": datatableToolsElementsParsed,
                "columns": columns,
                "lengthMenu": [
					[6, 12, 24],
					[6, 12, 24]
                ],
                "pageLength": 12,
                "language": {
                    "lengthMenu": showEntriesText,
                    "zeroRecords": zeroRecordsText,
                    "info": infoText,
                    "infoEmpty": infoEmptyText,
                    "infoFiltered": infoFilteredText,
                    "search": searchText,
                    "paginate": {
                        "first": paginateFirstText, // This is the link to the first page
                        "previous": paginatePreviousText, // This is the link to the previous page
                        "next": paginateNextText, // This is the link to the next page
                        "last": paginateLastText // This is the link to the last page
                    },
                },
                "initComplete": function (settings, json) {
                    jQuery(".loadingCatalogToolsResponsive").remove();
                    jQuery('#toolrow').insertBefore('#tabletools');
                    AddEventsToDatatable();
                    jQuery('#toolrow').show();
                },
                "rowCallback": function (row, data) {
                    // on each row callback
                    var urlDetails = '';
                    if (data[7] != '#') {
                        var urlDetails = '  href="{0}" target="_blank"  ';
                    }
                    var template =
						'<div class="col-12 col-md-6 col-xl-4">\n' +
						'    <div class="media tools-list__tool {5}">\n' +
						'        <a ' + urlDetails + 'class="tools-list__tool__image">\n' +
						'            <img class="pngicon" src="{4}" alt="">\n' +
						'        </a>\n' +
						'        <div class="media-body tools-list__tool__text">\n' +
						'            <h3 class="tools-list__tool__title"><a ' + urlDetails + '>{1}</a></h3>\n' +
						'            <p class="tools-list__tool__description">{2}</p>\n' +
						'            <hr class="hr">\n' +
						'            <p class="tools-list__tool__clasification">{3}</p>\n' +
						'            <p class="tools-list__tool__more_info"><a href="{7}">{8}</a></p>\n' +
						'        </div>\n' +
						'        <div class="ml-auto" {9}>\n' +
						'            <button type="button" class="tools-list__tool__btn-favourite" title="{10}" id ="btn{6}">\n' +
						'                <span class="icon-star" aria-hidden="true" ></span>\n' +
						'            </button>\n' +
						'        </div>\n' +
						'    </div>\n' +
						'</div>';
                    if (data && data.length >= 9) {
                        var favourite = "";
                        var btnTitle;
                        if (data[3]) {
                            favourite = "tools-list__tool--favourite";
                            btnTitle = deleteFavourite;
                        }
                        else {
                            btnTitle = addFavourite;
                        }
                        var showFavourite = "";
                        if (!data[8]) {
                            showFavourite = "style='display:none'";
                        }
                        var filledTemplate = String.format(template, data[7], data[0], GetMaxString(data[1], maxcharacters), data[2], data[4], favourite, data[6], data[5], moreInfo, showFavourite, btnTitle);
                        jQuery("#toolrow").append(filledTemplate);
                    }
                },
                "preDrawCallback": function (settings) {
                    // clear list before draw
                    jQuery('#toolrow').empty();
                },
                "drawCallback": function (settings) {
                    if (firstprint) {
                        firstprint = false;
                    }
                    else {
                        AddEventsToDatatable();
                    }
                }
            });
            // Custom changes to dom
            $("#tabletools").on("draw.dt", function (e) {
                SetCustomDatatable.call($(this), paginatePreviousText, paginateNextText, searchText, 'tools');
            }).each(function () {
                SetCustomDatatable.call($(this), paginatePreviousText, paginateNextText, searchText, 'tools'); // initialize
                $('[name="tabletools_length"]').on("change", function (e) {
                    $('#tabletools').DataTable().page('first').draw('page');
                });
            });
        }
    }
    else {
        jQuery(".loadingCatalogToolsResponsive").remove();
    }
}

function GetTranslationsDatatable() {
    var result;
    var useCache = false;
    var urlAjax = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/iCore4SP/services/tools.svc/getdatatabletranslations";
    jQuery.ajax({
        url: urlAjax,
        dataType: "json",
        cache: useCache,
        async: false
    }).done(function (data) {
        result = data;
    }).fail(function (error) {
        result = error;
    });
    return result;
}

function GetdatatableToolsElements() {
    var detailpage = jQuery("[name$='hiddenDetailPage']").val();
    var relativedetailpage = jQuery("[name$='hiddenRelativeDetailPage']").val();
    var obj = {};
    obj.detailpage = detailpage;
    obj.relativedetailpage = relativedetailpage;
    var string = JSON.stringify(obj);
    var useCache = false;
    var urlAjax = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/iCore4SP/services/tools.svc/getdatatableelements";
    var result;
    jQuery.ajax({
        url: urlAjax,
        dataType: "json",
        data: JSON.stringify(obj),
        cache: useCache,
        async: false
    }).done(function (data) {
        result = data;
    }).fail(function (error) {
        result = error;
    });
    return result;
}

function ReloadToolsDatatable() {
    var datatableToolsElements = GetdatatableToolsElements();
    if (typeof datatableToolsElements !== 'undefined' && typeof datatableToolsElements !== 'null' && datatableToolsElements != '[]') {
        var datatableToolsElementsParsed = JSON.parse(datatableToolsElements);
        var firstprint = true;
        if (typeof datatableToolsElementsParsed !== 'undefined' && typeof datatableToolsElementsParsed !== 'null' && datatableToolsElementsParsed != '') {
            var dt = $('#tabletools').DataTable();
            if (typeof dt !== 'undefined' && typeof dt !== 'null' && dt != '') {
                var page = dt.page();
                dt.clear();
                dt.rows.add(datatableToolsElementsParsed);
                dt.draw();
                if (typeof page !== 'undefined' && typeof page !== 'null' && page != '') {
                    dt.page(page).draw('page');
                }
            }
        }
    }
}

function AddEventsToDatatable() {
    jQuery(".media.tools-list__tool").not(".tools-list__tool--favourite").find(".tools-list__tool__btn-favourite").on('click', function (e) {
        AddToolFavourite2018(e);
    });
    jQuery(".media.tools-list__tool.tools-list__tool--favourite").find(".tools-list__tool__btn-favourite").on('click', function (e) {
        DeleteToolFavourite2018(e);
    });
}

function AddToolFavourite2018(e) {
    e.preventDefault();
    var useCache = false;
    var nombreLenguaje = jQuery("[name$='hiddenLanguageTools']").val();
    var idherramienta = e.currentTarget.id;

    var canaryValue = document.getElementById('__REQUESTDIGEST').value;
    var urlAjax = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/iCore4SP/handlers/tool.ashx";
    jQuery.ajax({
        url: urlAjax,
        dataType: "json",
        cache: useCache,
        type: "post",
        data: {
            oper: "2",
            idherramienta: idherramienta.replace("btn", ""),
            l: nombreLenguaje
        },
        beforeSend: function (request) {
            request.setRequestHeader("X-RequestDigest", canaryValue);
        },
    }).done(function (data) {
        var btn = jQuery("[id$='" + idherramienta + "']");
        var div = btn.parent().parent();
        div.addClass("tools-list__tool--favourite");
        btn.off('click');
        // Modificar los datos también en el datatable, si no en paginado, búsqueda, ... lo perderá
        ReloadToolsDatatable();
        btn.on('click', function (e) {
            DeleteToolFavourite2018(e);
        });
        ReloadMyToolsAndModal();
    }).fail(function (error) {
        alert(error.responseText);
    });
}

function DeleteToolFavourite2018(e) {
    e.preventDefault();
    var useCache = false;
    var nombreLenguaje = jQuery("[name$='hiddenLanguageTools']").val();
    var idherramienta = e.currentTarget.id;
    var deleteQuestionFav = jQuery("[name$='hiddenDeleteQuestion']").val();

    var title = jQuery("#" + idherramienta).parent().parent().find(".tools-list__tool__title a")[0].innerText;
    deleteQuestionFav = deleteQuestionFav.replace("{0}", "\"" + title + "\"");

    if (confirm(deleteQuestionFav)) {
        var canaryValue = document.getElementById('__REQUESTDIGEST').value;
        var urlAjax = _spPageContextInfo.webAbsoluteUrl + "/_layouts/15/iCore4SP/handlers/tool.ashx";
        jQuery.ajax({
            url: urlAjax,
            dataType: "json",
            cache: useCache,
            type: "post",
            data: {
                oper: "1",
                idherramienta: idherramienta.replace("btn", ""),
                l: nombreLenguaje
            },
            beforeSend: function (request) {
                request.setRequestHeader("X-RequestDigest", canaryValue);
            },
        }).done(function (data) {
            var btn = jQuery("[id$='" + idherramienta + "']");
            var div = btn.parent().parent();
            div.removeClass("tools-list__tool--favourite");
            // Modificar los datos también en el datatable, si no en paginado, búsqueda, ... lo perderá
            ReloadToolsDatatable();
            btn.off('click');
            btn.on('click', function (e) {
                AddToolFavourite2018(e);
            });
            ReloadMyToolsAndModal();
        }).fail(function (error) {
            alert(error.responseText);
        });
    }
}

///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////Catalog Services Responsive/////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////
function InitializeCatalogServices() {
    var hiddenServices = jQuery("[name*='hiddenServices']").val();
    if (typeof hiddenServices !== 'undefined' && typeof hiddenServices !== 'null' && hiddenServices != '[]') {
        var hiddenServicesParsed = JSON.parse(hiddenServices);
        var columns = [{
            "title": "Title"
        }, {
            "title": "Description"
        }, {
            "title": "Category"
        }, {
            "title": "LinkService"
        }];
        var showEntriesText = "Mostrar _MENU_ servicios";
        var searchText = "Buscar";
        var infoText = "Mostrando de la _START_ a la _END_ de un total de _TOTAL_ servicios"
        var infoFilteredText = "";
        var infoEmptyText = "No existen servicios disponibles";
        var zeroRecordsText = "Ninguna coincidencia encontrada";
        var paginateFirstText = "Primera página";
        var paginatePreviousText = "Anterior";
        var paginateNextText = "Siguiente";
        var paginateLastText = "Última página";

        var translations = jQuery("[name*='hiddenTranslationsServices']").val();
        if (typeof translations !== 'undefined' && typeof translations !== 'null' && translations != '') {
            var translationsParsed = JSON.parse(translations);
            if (typeof translationsParsed !== 'undefined' && typeof translationsParsed !== 'null' && translationsParsed != '') {
                showEntriesText = translationsParsed.ShowEntries;
                searchText = translationsParsed.Search;
                infoText = translationsParsed.Info;
                infoFilteredText = translationsParsed.InfoFiltered;
                infoEmptyText = translationsParsed.InfoEmpty;
                zeroRecordsText = translationsParsed.ZeroRecords;
                paginateFirstText = translationsParsed.PaginateFirst;
                paginatePreviousText = translationsParsed.PaginatePrevious;
                paginateNextText = translationsParsed.PaginateNext;
                paginateLastText = translationsParsed.PaginateLast;
            }
        }

        var maxcharacters = Number(jQuery("[name*='hiddenMaxCharactersServices']").val());

        jQuery('#tableservices').dataTable({
            "dom": '<"list-filter"\n' +
				'     <"list-filter__form-search"\n' +
				'         <"row"\n' +
				'             <"d-none d-md-block col-md-5 col-xl-4"l>\n' +
				'             <"col-md-5 col-xl-4 ml-auto"\n' +
				'                 <"label-input-group label-input-group-services"f>\n' +
				'             >\n' +
				'         >\n' +
				'     >\n' +
				' >\n' +
				' <"tools-list"t>\n' +
				' <"pager"\n' +
				'     <"row"\n' +
				'         <"col-md-6"\n' +
				'             <"pager__text"i>\n' +
				'         >\n' +
				'         <"col-md-6"\n' +
				'             <"pager__pager"p>\n' +
				'         >\n' +
				'     >\n' +
				' >',
            "data": hiddenServicesParsed,
            "columns": columns,
            "lengthMenu": [
				[6, 12, 24],
				[6, 12, 24]
            ],
            "pageLength": 12,
            "language": {
                "lengthMenu": showEntriesText,
                "zeroRecords": zeroRecordsText,
                "info": infoText,
                "infoEmpty": infoEmptyText,
                "infoFiltered": infoFilteredText,
                "search": searchText,
                "paginate": {
                    "first": paginateFirstText, // This is the link to the first page
                    "previous": paginatePreviousText, // This is the link to the previous page
                    "next": paginateNextText, // This is the link to the next page
                    "last": paginateLastText // This is the link to the last page
                },
            },
            "initComplete": function (settings, json) {
                jQuery(".loadingCatalogServicesResponsive").remove();
                jQuery('#servicerow').insertBefore('#tableservices');
                jQuery('#servicerow').show();
            },
            "rowCallback": function (row, data) {
                // on each row callback
                var clasification = "";
                if (data[2]) {
                    var clasificationTemplate = '<p class="tools-list__tool__clasification">{0}</p>';
                    var categorys = data[2].split(";"),
						i;
                    for (i = 0; i < categorys.length; i++) {
                        if (categorys[i] && categorys[i] != "") {
                            clasification += String.format(clasificationTemplate, categorys[i]);
                        }
                    }
                }
                var urlDetails = '';
                if (data[3] != '#') {
                    var urlDetails = '  href="{0}" ';
                }
                var template =
					'<div class="col-12 col-md-6 col-xl-4">\n' +
					'    <div class="tools-list__tool">\n' +
					'	    <div class="tools-list__tool__text services__text">\n' +
					'		    <h3 class="tools-list__tool__title"><a ' + urlDetails + '>{1}</a></h3>\n' +
					'		    <p class="tools-list__tool__description">{2}</p>\n' +
					'		    <hr class="hr">\n' +
					'		    {3}\n' +
					'	    </div>\n' +
					'    </div>\n' +
					'</div>';
                if (data && data.length >= 4) {
                    var filledTemplate = String.format(template, data[3], data[0], GetMaxString(data[1], maxcharacters), clasification);
                    jQuery("#servicerow").append(filledTemplate);
                }
            },
            "preDrawCallback": function (settings) {
                // clear list before draw
                jQuery('#servicerow').empty();
            },
            "drawCallback": function (settings) {}
        });

        // Custom changes to dom
        $("#tableservices").on("draw.dt", function (e) {
            SetCustomDatatable.call($(this), paginatePreviousText, paginateNextText, searchText, 'services');
        }).each(function () {
            SetCustomDatatable.call($(this), paginatePreviousText, paginateNextText, searchText, 'services'); // initialize
            $('[name="tableservices_length"]').on("change", function (e) {
                $('#tableservices').DataTable().page('first').draw('page');
            });
        });
    }
    else {
        jQuery(".loadingCatalogServicesResponsive").remove();
    }
}

// Obtiene la cadena de caracteres hasta los caracteres que se marquen.
// Si la cadena origen es mayor se corta y se ponen los puntos suspensivos
function GetMaxString(source, maxcharacters) {
    // Si maxcharacters no es número asignamos un valor por defecto
    if (isNaN(maxcharacters)) {
        maxcharacters = 150;
    }

    if (source && source.length && maxcharacters && source.length > maxcharacters) {
        return source.substring(0, maxcharacters) + "...";
    }
    else {
        return source;
    }
}

function WrapText() {
    //Funcion del "ver mas"
    var showChar = 80;
    var ellipsestext = "...";
    var moretext = "más";
    var lesstext = "menos";
    jQuery('.textMore').each(function () {
        var content = jQuery(this).html();
        if (content.length > showChar) {
            var c = content.substr(0, showChar - 1);
            var h = content.substr(showChar - 1, content.length - showChar);
            var html = c + '<span class="moreellipses">' + ellipsestext + '</span><span class="morecontent"><span>' + h + '</span> <a href="#" class="morelink">' + moretext + '</a></span>';
            jQuery(this).html(html);
        }
    });

    //Evento del "ver mas"
    jQuery(".morelink").click(function () {
        var commuIniArticuloContenido = jQuery(this).parents(".commuIniArticuloContenido");
        if (commuIniArticuloContenido != null) {
            if (jQuery(commuIniArticuloContenido).find("ul.toolsSmall").attr("style") != null && jQuery(commuIniArticuloContenido).find("ul.toolsSmall").attr("style").indexOf("relative") > -1) {
                jQuery(commuIniArticuloContenido).find("ul.toolsSmall").removeAttr("style");
                jQuery(commuIniArticuloContenido).find("ul.toolsSmall").attr("style", "position: absolute");
            }
            else {
                jQuery(commuIniArticuloContenido).find("ul.toolsSmall").attr("style", "position: relative");
            }
        }

        jQuery(this).parent().prev().toggle('slow');
        jQuery(this).prev().toggle('slow');

        if (jQuery(this).hasClass("less")) {
            jQuery(this).removeClass("less");
            jQuery(this).html(moretext);
        }
        else {
            jQuery(this).addClass("less");
            jQuery(this).html(lesstext);
        }

        return false;
    });
}

/* METODOS COMPATIBILIDAD VERSIONES ANTERIORES */
jQuery(document).ready(function (jQuery) {
    /* Inicio en la red */
    if (jQuery('#startFollowingPage') != null) {
        var changesCookie = ReadCookie('ChangesCanceled');
        if (jQuery('#startFollowingPage').val() != null && jQuery('#startFollowingPage').val() != '' && (changesCookie == null || changesCookie != 'yes')) {
            var targetUrl = jQuery('#startFollowingPage').val();

            var options = {
                url: targetUrl,
                title: '',
                allowMaximize: false,
                showClose: false,
                width: 550,
                height: 220,
                dialogReturnValueCallback: function (result) {
                    SP.UI.ModalDialog.RefreshPage(SP.UI.DialogResult.OK);
                }
            };
            SP.SOD.execute('sp.ui.dialog.js', 'SP.UI.ModalDialog.showModalDialog', options);

            jQuery('#startFollowingPage').val('');
        }
    }

    //verificar si existe campo de publicar en...
    if (jQuery('#redhora').length > 0) {
        //hay select de publicar en... no hacer nada
    }
    else {
        jQuery('.redBtonCompartir').removeAttr('disabled');
    }

    /* Quita el texto por defecto de los input o textArea */
    function sustitPlaceholder() {
        jQuery('[placeholder]').focus(function () {
            var input = jQuery(this);
            if (input.val() == input.attr('placeholder')) {
                input.val('');
                input.removeClass('placeholder');
            }
        }).blur(function () {
            var input = jQuery(this);
            if (input.val() == '' || input.val() == input.attr('placeholder')) {
                input.addClass('placeholder');
                input.val(input.attr('placeholder'));
            }
        }).blur();
        jQuery('[placeholder]').parents('form').submit(function () {
            jQuery(this).find('[placeholder]').each(function () {
                var input = jQuery(this);
                if (input.val() == input.attr('placeholder')) {
                    input.val('');
                }
            })
        });
    };

    /* Scroll top */
    jQuery(".scrollTop").click(function (e) {
        e.preventDefault();
        jQuery("html, body").animate({
            scrollTop: 0
        }, "slow", function () {
            window.scrollTo(0);
        });
    });

    /* Scroll bookmark */
    jQuery(".scroll").click(function (e) {
        e.preventDefault();
        var jQueryanchor = this.hash;
        jQuery("html, body").animate({
            scrollTop: jQuery(this.hash).offset().top
        }, "slow", function () {
            location.href = jQueryanchor;
        });
    });

    /*Despliegue en acordeÃ³n*/
    jQuery(".acordeon li").click(function () {
        if (!jQuery(this).hasClass("active")) {
            jQuery(".acordeonDiv").hide("slow");
            jQuery(this).find(".acordeonDiv").show("slow");

            jQuery(".acordeon li").removeClass("active");
            jQuery(this).addClass("active");
        }
    });

    /* Despliegue de los bloques de indraBlock */
    jQuery(".indraBlockList li").click(function () {
        // Obtiene la clase del div que se debe mostrar
        clases = jQuery(this).attr("class");
        claseDiv = clases.substring(clases.indexOf("indraBlock")).split(" ")[0];

        if (!jQuery(this).hasClass("active")) {
            // Oculta todos los divs excepto el que se debe mostrar
            jQuery(this).parent().parent().find(".indraBlockItemCont").hide();
            jQuery("." + claseDiv).slideDown();

            // Pone activo sÃ³lo el bloque pulsado
            jQuery(this).parent().parent().find(".active").removeClass("active");
            jQuery(this).addClass("active");
        }
        else {
            jQuery(this).parent().parent().find(".indraBlockItemCont." + claseDiv).slideUp();
            jQuery(this).removeClass("active");
        }
    });

    /* Desplegables de la distributiva de ofertas */
    jQuery(".ofertDistDesplegable").click(function () {
        if (!jQuery(this).hasClass("active")) {
            jQuery(this).next().show("fast");
            jQuery(this).next().css('display', 'inline-block');;
            jQuery(this).addClass("active");
        }
        else {
            jQuery(this).next().hide("fast");
            jQuery(this).removeClass("active");
        }
    });

    if (jQuery('.mainPopTareasList').length > 0) {
        jQuery('.mainPopTareasList').on('click', function (e) {
            $(this).toggleClass('open');
            $(this).siblings('li').toggle();
        });
    }

    /* Red profesional -> Profesionales: ver / ocultar informaciÃ³n de los miembros */
    jQuery(".redIniciProfesMasInfo").click(function () {
        if (!jQuery(this).hasClass("active")) {
            jQuery(this).parents("tr").next(".redIniciProfesTableTrInfo").show("fast");
            jQuery(this).addClass("active");
            jQuery(this).parents("tr").addClass("desplegado");
            jQuery(this).html("ocultar información...");
        }
        else {
            jQuery(this).parents("tr").next(".redIniciProfesTableTrInfo").hide("fast");
            jQuery(this).removeClass("active");
            jQuery(this).parents("tr").removeClass("desplegado");
            jQuery(this).html("ver más información...");
        }
    });

    /* Boletines > Despliegue del contenido de los bloques. */
    jQuery(".boletSelectorBtnSiguiente").click(function () {
        var seccion = jQuery(this).parents(".boletSeccion");
        if (!seccion.hasClass("active")) {
            seccion.addClass("active");
            //seccion.find(".boletContenido").show("fast");
        }
    });

    /* Red > Grupo > Documentos: Abre ventana al pulsar en "proponer" */
    jQuery(".redGrupoDocLinkProp").click(function (event) {
        event.preventDefault();
        var jQuerydivProp = jQuery(this).next(".redGrupoDocDivProp");
        jQuerydivProp.css("top", jQuery(this).position().top - 10);
        jQuerydivProp.css("left", jQuery(this).position().left + 12);
        jQuerydivProp.show();
    });

    /* Red > Grupo > Documentos: Cierra ventana quitar el ratÃ³n */
    jQuery(".redGrupoDocDivProp").mouseleave(function (event) {
        jQuery(this).hide("fast");
    });

    /* Red > Grupo > Documentos: Abre ventana al pulsar en "mÃ¡s" */
    jQuery(".redGrupoDocLinkMas").click(function (event) {
        event.preventDefault();
        var jQuerydiv = jQuery(this).next(".redGrupoDocDivMas");
        jQuerydiv.css("top", jQuery(this).position().top - 11);
        jQuerydiv.css("left", jQuery(this).position().left + 2);
        jQuerydiv.show();
    });

    /* Red > Grupo > Documentos: Cierra ventana quitar el ratÃ³n */
    jQuery(".redGrupoDocDivMas").mouseleave(function (event) {
        jQuery(this).hide("fast");
    });

    /* Red > Grupo > Miembros: Abre ventana al pulsar en el input de rol */
    jQuery(".redGrupoMiemAdminLinkRol").focusin(function (event) {
        event.preventDefault();
        var jQuerydiv = jQuery(this).parent().next(".redGrupoMiemAdminDivRol");
        jQuerydiv.css("top", jQuery(this).position().top + 17);
        jQuerydiv.css("left", jQuery(this).position().left - 19);
        jQuerydiv.show();

        /* Fix para IE7 */
        if (jQuery.browser.msie && parseInt(jQuery.browser.version, 10) === 7) {
            jQuery(this).parent().parent().parent().css("position", "relative");
            jQuerydiv.css("left", jQuery(this).position().left - 15);
            if (jQuery(this).parent().parent().find(".redGrupoMiembrosIconoLlave").length == 1) {
                jQuerydiv.css("margin-top", "-8px");
            }
        }
    });

    /* Red > Grupo > Documentos: Cierra ventana al quitar el foco */
    jQuery(".redGrupoMiemAdminLinkRol").focusout(function (event) {
        event.preventDefault();
        var jQuerydiv = jQuery(this).parent().next(".redGrupoMiemAdminDivRol");
        jQuerydiv.hide("fast");

        /* Fix para IE7 */
        if (jQuery.browser.msie && parseInt(jQuery.browser.version, 10) === 7) {
            jQuery(this).parent().parent().parent().css("position", "");
        }
    });

    /* Red > Grupo > Miembros: Abre ventana al pulsar en "permisos" */
    jQuery(".redGrupoMiemAdminLinkPerm").click(function (event) {
        event.preventDefault();
        var jQuerydiv = jQuery(this).next(".redGrupoMiemAdminDivPerm");
        jQuerydiv.css("top", jQuery(this).position().top - 2);
        jQuerydiv.css("left", jQuery(this).position().left - 12);
        jQuerydiv.show();

        /* Fix para IE7 */
        if (jQuery.browser.msie && parseInt(jQuery.browser.version, 10) === 7) {
            jQuery(this).parent().parent().css("position", "relative");
            if (jQuery(this).parent().find(".redGrupoMiembrosIconoLlave").length == 1) {
                jQuerydiv.css("margin-top", "-8px");
            }
        }
    });

    /* Red > Grupo > Documentos: Cierra ventana al quitar el ratÃ³n */
    jQuery(".redGrupoMiemAdminDivPerm").mouseleave(function (event) {
        jQuery(this).hide("fast");

        /* Fix para IE7 */
        if (jQuery.browser.msie && parseInt(jQuery.browser.version, 10) === 7) {
            jQuery(this).parent().parent().css("position", "");
        }
    });

    /* Red > Grupo > Crear Grupo: PÃ¡sa a la siguiente pÃ¡gina del asistente */
    jQuery(".redGrupoCrearSiguiente").click(function (event) {
        event.preventDefault();
        var clase = jQuery(this).attr("class").replace("redGrupoCrearSiguiente ", "");
        claseDiv = clase.substring(clase.indexOf("redGrupoCrearSiguiente")).split(" ")[0];
        var esValido = validarRequeridos(claseDiv);
        if (!esValido) alert("Existen campos erróneos");
        else {
            switch (claseDiv) {
                case "redGrupoCrearSiguiente01":
                    jQuery(".redGrupoCrearMenu li:nth-child(1)").removeClass("active");
                    jQuery(".redGrupoCrearMenu li:nth-child(1)").addClass("anteriorActive");
                    jQuery(".redGrupoCrearMenu li:nth-child(2)").addClass("active");
                    jQuery(".redGrupoCrearPest01").removeClass("active");
                    jQuery(".redGrupoCrearPest02").addClass("active");
                    break;
                case "redGrupoCrearSiguiente02":
                    jQuery(".redGrupoCrearMenu li:nth-child(1)").removeClass("anteriorActive");
                    jQuery(".redGrupoCrearMenu li:nth-child(2)").removeClass("active");
                    jQuery(".redGrupoCrearMenu li:nth-child(2)").addClass("anteriorActive");
                    jQuery(".redGrupoCrearMenu li:nth-child(3)").addClass("active");
                    jQuery(".redGrupoCrearPest02").removeClass("active");
                    jQuery(".redGrupoCrearPest03").addClass("active");
                    break;
            }
        }
    });

    var expRegEmail = /^([0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,9})jQuery/i;

    /* Red > Grupo > Crear Grupo: Comprueba si es valido cada elemento del formulario de cada pestaÃ±a del asistente */
    function validarRequeridos(claseDiv) {
        var clasePest;
        // Dependiendo del boton que se pulse, hace la comprobacion de los elementos de su pestaÃ±a correspondiente
        switch (claseDiv) {
            case "redGrupoCrearSiguiente01":
                clasePest = "redGrupoCrearPest01";
                break;
            case "redGrupoCrearSiguiente02":
                clasePest = "redGrupoCrearPest02";
                break;
            case "redGrupoCrearBtnCrearGrupo":
                clasePest = "redGrupoCrearPest03";
                break;
        }
        var tipo;
        var tipoInput;
        var valido = true;
        var elemValido;
        jQuery("." + clasePest + " .required").each(function () {
            tipo = jQuery(this).get(0).tagName;
            tipoInput = jQuery(this).attr("type");
            switch (tipo.toUpperCase()) {
                case "INPUT":
                    // Valido si no esta vaci­o
                    elemValido = jQuery(this).val() != "" && jQuery(this).val() != jQuery(this).attr("placeholder");
                    if (elemValido) {
                        switch (tipoInput.toUpperCase()) {
                            case "EMAIL":
                                elemValido = validaElemento(jQuery(this), expRegEmail);
                                break;
                        }
                    }
                    break;
                case "TEXTAREA":
                    // Valido si no esta vaci­o
                    elemValido = jQuery(this).val() != "" && jQuery(this).val() != jQuery(this).attr("placeholder");
                    break;
                case "SELECT":
                    // Valido si no esta seleccionado el primer elemento
                    elemValido = jQuery(this).prop("selectedIndex") != 0;
                    break;
            }
            cambiaClasesValidez(jQuery(this), elemValido);
            // Si al menos 1 elemento no es valido, el formulario tampoco lo es
            if (!elemValido) valido = false;
        });
        return valido;
    }

    /* Alterna las clases error y valid dependiendo de si el elemento es valido */
    function cambiaClasesValidez(jQueryelemento, esValido) {
        if (esValido) {
            jQueryelemento.removeClass("error");
            jQueryelemento.addClass("valid");
        }
        else {
            jQueryelemento.removeClass("valid");
            jQueryelemento.addClass("error");
        }
    }

    /* Comprueba constantemente que el email introducido sea valido */
    jQuery(".required[type='email']").bind("change keyup input paste", function (event) {
        cambiaClasesValidez(jQuery(this), validaElemento(jQuery(this), expRegEmail));
    });

    /* Valida el valor del elemento segun la expresion regular proporcionada */
    function validaElemento(jQueryelemento, expReg) {
        return expReg.test(jQueryelemento.val());
    }

    jQuery(".redGrupoCrearBtnCrearGrupo").click(function (event) {
        var esValido = validarRequeridos("redGrupoCrearBtnCrearGrupo") && jQuery(".redGrupoCrearPest03 .error").length == 0;
        if (!esValido) alert("Existen campos erróneos");
    });

    /* Red > Grupo > Crear Grupo: Abre ventana al pulsar en el input de etiquetas */
    jQuery(".redGrupoCrearEtiquetasInput").focusin(function (event) {
        event.preventDefault();
        var jQuerydiv = jQuery(this).parent().next(".redGrupoCrearEtiquetasOpciones");
        jQuerydiv.show();
    });

    /* Red > Grupo > Crear Grupo: Cierra ventana al quitar el foco */
    jQuery(".redGrupoCrearEtiquetasInput").focusout(function (event) {
        event.preventDefault();
        var jQuerydiv = jQuery(this).parent().next(".redGrupoCrearEtiquetasOpciones");
        jQuerydiv.hide("fast");
    });

    /* Red - evento para Publicar en... */
    if (jQuery('.redIniciComentarios').length > 0) {
        $('.redIniciComentarios').on('mouseover', function (e) {
            e.stopPropagation();
            $(this).children('.redComentErase').show();
        });

        $('.redIniciComentarios').on('mouseout', function (e) {
            $(this).children('.redComentErase').hide();
        });
    }

    function showMoreText() {
        var moretext = 'ver más';
        var lesstext = 'ver menos';
        var ellipsestext = '...';
        $('[class*="showMore-"]').each(function () {
            //Buscamos la cantidad de caracteres en la clase
            var showChar = $(this).attr('class').match(/(showMore\-)([0-9]{1,3})/);
            showChar = (showChar != null && parseInt(showChar[2]) > 9) ? parseInt(showChar[2]) : 80;
            var content = $(this).html();
            if (content.length > showChar) {
                var showtext = content.substr(0, showChar);
                var hiddentext = content.substr(showChar, content.length);
                var ellipsescont = $('<span/>').attr('class', 'moreellipses').text(ellipsestext);
                var hiddencont = $('<span/>').text(hiddentext);
                var morelink = $('<a/>').attr({
                    'href': '#',
                    'class': 'morelink'
                }).text(moretext).on('click', function (e) {
                    e.preventDefault();
                    if ($(this).hasClass('less')) {
                        $(this).removeClass('less');
                        $(this).html(moretext);
                    }
                    else {
                        $(this).addClass('less');
                        $(this).html(lesstext);
                    }
                    $(this).parent().prev().toggle();
                    $(this).prev().toggle();
                    return false;
                });
                var showcont = $('<span/>').attr('class', 'morecontent').append(hiddencont, ' ', morelink);
                $(this).html(showtext).append(ellipsescont, showcont);
            }
        });
    }

    showMoreText();
});

// Eliminamos del rastro de migas las variantes de idioma y de los agrupadores
var breadcrumbs = jQuery(".breadcrumbs");
var breadcrumbsDiv = jQuery("#breadcrumbsDiv");
jQuery(breadcrumbs).find("span:contains('languages')").hide().nextAll("*:lt(3)").hide().next().children("a").removeAttr("href");
jQuery(breadcrumbs).find("span:contains('Indra Community')").children("a").removeAttr("href");
jQuery(breadcrumbsDiv).css('visibility', 'visible');
$('[id*="agrupador"]').each(function () {
    var agrupadorText = $(this).text();
    jQuery(breadcrumbs).find(".breadcrumbs__link").each(function () {
        var breadcrumbsText = $(this).text();
        if (agrupadorText == breadcrumbsText) {
            $(this).removeAttr("href");
        }
    });
});

function GetDictionaryValue(translations, key) {
    if (translations.hasOwnProperty(key)) {
        return translations[key];
    }
    else {
        return "";
    }
}

jQuery(document).ready(function (jQuery) {
    $('.video-responsive iframe').each(function () {
        $(this).attr('allowFullScreen', '');
        $(this).attr('webkitallowfullscreen', '');
        $(this).attr('mozallowfullscreen', '');
        $(this)[0].src = $(this)[0].src;
    });

    $(".article__text img").not(".welcomePopup img").removeAttr("style");
});


jQuery(document).ready(function () {
    //cambiar título a la pagina para guardar en favoritos
    if (window.location.href.toLowerCase().indexOf('/professionalnetwork/') != -1) {
        if (jQuery('.redGrupoTitle').length == 1 && jQuery('.redGrupoTitle').text() != '') {
            document.title = jQuery('.redGrupoTitle').text().trimStart().trimEnd();
        }

        if (jQuery('.redIniciEncabezadoTitulo').length == 1 && jQuery('.redIniciEncabezadoTitulo').text() != '') {
            document.title = jQuery('.redIniciEncabezadoTitulo').text().trimStart().trimEnd();
        }

        if (jQuery('.mainTitle').length == 1 && jQuery('.mainTitle').text() != '') {
            document.title = jQuery('.mainTitle').text().trimStart().trimEnd();
        }

        if (jQuery("[id$=_socialUserName]").length == 1 && jQuery("[id$=_socialUserName]").text() != '') {
            document.title = jQuery("[id$=_socialUserName]").text().trimStart().trimEnd();
        }
    }
});